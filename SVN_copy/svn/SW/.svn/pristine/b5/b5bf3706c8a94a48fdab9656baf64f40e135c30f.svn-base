

// map fpga offset values for mmap() function
#define PFP_VAL 		0x08	// register #8 * 4 bytes per register
#define PTLT_VAL		0x09    // bits 23:0 contain the voltage value
#define PTRT_VAL 		0x0A
#define TCMP_VAL 		0x0B
#define COP_VAL      	0X0C

#define TS_LOW       	0x21
#define TS_HIGH      	0x22
#define TS_COUNT     	0x25
#define CAM_TS_VAL_0 	0x28	// register #40 * 4 bytes per register                                                                                
#define CAM_TS_VAL_1 	0x29    // bits 31:0 contain TS
#define CAM_TS_VAL_2 	0x2A
#define CAM_TS_VAL_3 	0x2B
#define CAM_TS_VAL_4 	0x2C
#define CAM_TS_VAL_5 	0x2D
#define CAM_TS_VAL_6 	0x2E
#define CAM_TS_VAL_7 	0x2F
#define CAM_TS_VAL_8 	0x30

//* Interrupt Sense Register
// Set bit to '1' for edge sensing, '0' for level sensing.*/
#define ISR 			0x60
//* Interrupt Event Register
// Set bit to '1' for rising edge sensing, '0' for falling edge.*/
#define IEVR 			0x62
//* Interrupt Mask Register
// Set bit '1' to enable interrupt on input, '0' to disable.*/
#define IMR 			0x63
//* Interrupt Ack Register
// Write bit to '1' to clear interrupt, read as '0'.*/
#define IAR 			0x66


// #define PFP_VAL  1      // register #8 * 4 bytes per register
// #define PTLT_VAL 2     // bits 23:0 contain the voltage value
// #define PTRT_VAL 3
// #define TCMP_VAL 4
// #define COP_VAL  5

// #define CAM_TS_VAL_0 6   // register #40 * 4 bytes per register                                                                                
// #define CAM_TS_VAL_1 7   // bits 31:0 contain TS
// #define CAM_TS_VAL_2 8
// #define CAM_TS_VAL_3 9
// #define CAM_TS_VAL_4 10
// #define CAM_TS_VAL_5 11
// #define CAM_TS_VAL_6 12
// #define CAM_TS_VAL_7 13
// #define CAM_TS_VAL_8 14

// #define IAR 15