#!/usr/bin/env python3

# This script tests whether the applications/modules are launched in the correct order.

import sys
import os.path
sys.path.append(os.path.join(os.path.dirname(__file__), '../utils'))
import barsm_utils
import log

def run():
    # navigate to the end of the SYSLOG
    follow = log.logfollower()

    # execute noraml actions
    barsm_utils.norm_launch()

    # setup AACM side of BARSM/AACM communications
    success = barsm_utils.aacm_setup()

    if success:
        # launch processes
        launch_result, var1 = barsm_utils.monitor_launch()

        # check logs for launch errors
        logs = follow.read('barsm')
        # print(logs)

        launch_errors = sum(1 for d in logs if "File launch failed!" in d.get('message'))

        if launch_result == 5 and launch_errors == 0:
            # store all timestamps
            aacm_ts =   list(filter(lambda t: "/opt/rc360/system" in t['message'], logs))[0]['timestamp']
            gemod_ts =  list(filter(lambda t: "/opt/rc360/modules/GE" in t['message'], logs))[0]['timestamp']
            tpamod_ts = list(filter(lambda t: "/opt/rc360/modules/TPA" in t['message'], logs))[0]['timestamp']
            geapp_ts =  list(filter(lambda t: "/opt/rc360/apps/GE" in t['message'], logs))[0]['timestamp']
            tpaapp_ts = list(filter(lambda t: "/opt/rc360/apps/TPA" in t['message'], logs))[0]['timestamp']

            # Ensure that 5 apps were launched, there were no errors, and that the apps
            # were launched in the correct order. 
            if gemod_ts  < aacm_ts   :
                print('gemod_ts  < aacm_ts')
                success = False
            if tpamod_ts < aacm_ts   :
                print('tpamod_ts < aacm_ts ')
                success = False
            if geapp_ts  < gemod_ts  :
                print('geapp_ts  < gemod_ts')
                success = False
            if tpaapp_ts < gemod_ts  :
                print('tpaapp_ts < gemod_ts')
                success = False
            if geapp_ts  < tpamod_ts :
                print('geapp_ts  < tpamod_ts')
                success = False
            if tpaapp_ts < tpamod_ts:
                print('tpaapp_ts < tpamod_ts')
                success = False
        else:
            success = False


    # kill off all started processes
    barsm_utils.kill_procs()

    print('{}'.format('PASSED' if success else 'FAILED'))
    return success

if __name__ == '__main__':
    run()
