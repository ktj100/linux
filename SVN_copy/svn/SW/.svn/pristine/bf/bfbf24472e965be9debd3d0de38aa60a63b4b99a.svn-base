#!/usr/bin/env python3

import sys
sys.path.insert(0, '/home/norwood/sandbox/repos/trunk/SW/test/utils')
import simm
import log
import subprocess
import time

# This is structured pretty much the same way as MyServer.c
if __name__ == '__main__':

    # I'm thinking of looping through each function with a passfail option.  However, that would require
    #   restarting SIMM each time.  Moreover, there are about 4 functions to test each having about 4 tests.  
    #   Not sure if this is the best approach.  

    # TCP/UDP setup
    TCPconn = simm.TCPsetup()
    UDPsock = simm.UDPsetup()

    # TCP at boot 
    time.sleep(1)
    simm.registerApp(TCPconn)
    time.sleep(1)
    simm.registerAppAck(TCPconn, 0)
    time.sleep(1)
    simm.registerData(TCPconn)
    time.sleep(1)
    simm.registerDataAck(TCPconn, 0)
    time.sleep(1)

    # UDP at boot  
    # If I don't put a large delay in my .c, this fails.  If the .c stuff executes before this starts, it fails.  
    SenderAddr = simm.udpOpen(UDPsock)
    time.sleep(3)
    simm.sysInit(UDPsock, SenderAddr, 0)
    time.sleep(1)

    # TCP (only once for now)
    # incorporate other SUBSCRIBEs during run-time and see how published data changes
    simm.subscribe(TCPconn, 0)
    time.sleep(1)
    simm.subscribeAck(TCPconn)

    # RUN-TIME
    while 1:
        simm.publish(UDPsock)
        

